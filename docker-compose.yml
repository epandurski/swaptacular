version: '3.6'

services:

  pg:
    image: postgres:13.0
    environment:
      - 'POSTGRES_DB=$POSTGRES_DB'
      - 'POSTGRES_USER=$POSTGRES_USER'
      - 'POSTGRES_PASSWORD=$POSTGRES_PASSWORD'
    volumes:
      - 'pg-data-volume:/var/lib/postgresql/data'
      - './docker/pg/create-users.sql:/docker-entrypoint-initdb.d/create-users.sql'
    command: -c log_min_messages=FATAL
    restart: on-failure


  rabbitmq:
    image: rabbitmq:3.8.11-management-alpine
    hostname: rabbitmq
    volumes:
      - './docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf'
      - 'rabbitmq-data-volume:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq'
    environment:
      - 'RABBITMQ_LOGS=-'
    ports:
      - $RABBITMQ_MANAGEMENT_LOCAL_PORT:15672
    restart: on-failure


  accounts-server:
    image: epandurski/swpt_accounts:0.2.3
    env_file: docker/accounts-server.env
    environment:
      - 'PORT=8080'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_accounts:swpt_accounts@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'CHORES_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'APP_FETCH_API_URL=http://accounts-cache:80'
    restart: on-failure


  creditors-server:
    image: epandurski/swpt_creditors:0.2.0
    env_file: docker/creditors-server.env
    environment:
      - 'PORT=8080'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_creditors:swpt_creditors@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'OAUTH2_INTROSPECT_URL=http://creditors-login:4445/oauth2/introspect'
    restart: on-failure


  creditors-login:
    image: epandurski/swpt_login:0.10.1
    env_file: docker/creditors-login.env
    environment:
      - 'SERVE_PUBLIC_PORT=4444'
      - 'SERVE_ADMIN_PORT=4445'
      - 'WEBSERVER_PORT=8080'
      - 'HYDRA_DSN=postgres://hydra_creditors:hydra_creditors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_creditors_login:swpt_creditors_login@pg/${POSTGRES_DB}'
      - 'REDIS_URL=redis://redis:6379/0?health_check_interval=30'
      - 'URLS_SELF_ISSUER=https://$PUBLIC_HOST/creditors-hydra/'
      - 'URLS_LOGIN=https://$PUBLIC_HOST/creditors-login/'
      - 'URLS_CONSENT=https://$PUBLIC_HOST/creditors-consent/'
      - 'API_AUTH2_TOKEN_URL=https://nginx:$PUBLIC_PORT/creditors-hydra/oauth2/token'
      - 'API_RESOURCE_SERVER=http://creditors-server:8080'
      - 'HYDRA_ADMIN_URL=http://creditors-login:4445'
      - 'MAIL_SERVER=mail'
      - 'MAIL_PORT=25'
    restart: on-failure


  creditors-swagger-ui:
    image: epandurski/swpt_creditors_swagger_ui:0.2.0
    environment:
      - 'API_ROOT=https://$PUBLIC_HOST/'
      - 'BASE_URL=/creditors-swagger-ui'
      - 'OAUTH2_AUTHORIZATION_URL=https://$PUBLIC_HOST/creditors-hydra/oauth2/auth'
      - 'OAUTH2_TOKEN_URL=https://$PUBLIC_HOST/creditors-hydra/oauth2/token'
      - 'OAUTH2_REFRESH_URL=https://$PUBLIC_HOST/creditors-hydra/oauth2/token'
      - 'OAUTH2_REDIRECT_URL=https://$PUBLIC_HOST/creditors-swagger-ui/oauth2-redirect.html'
    restart: on-failure

    
  debtors-server:
    image: epandurski/swpt_debtors:0.2.1
    env_file: docker/debtors-server.env
    environment:
      - 'PORT=8080'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors:swpt_debtors@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'OAUTH2_INTROSPECT_URL=http://debtors-login:4445/oauth2/introspect'
    restart: on-failure


  debtors-login:
    image: epandurski/swpt_login:0.10.1
    env_file: docker/debtors-login.env
    environment:
      - 'SERVE_PUBLIC_PORT=4444'
      - 'SERVE_ADMIN_PORT=4445'
      - 'WEBSERVER_PORT=8080'
      - 'HYDRA_DSN=postgres://hydra_debtors:hydra_debtors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors_login:swpt_debtors_login@pg/${POSTGRES_DB}'
      - 'REDIS_URL=redis://redis:6379/1?health_check_interval=30'
      - 'URLS_SELF_ISSUER=https://$PUBLIC_HOST/debtors-hydra/'
      - 'URLS_LOGIN=https://$PUBLIC_HOST/debtors-login/'
      - 'URLS_CONSENT=https://$PUBLIC_HOST/debtors-consent/'
      - 'API_AUTH2_TOKEN_URL=https://nginx:$PUBLIC_PORT/debtors-hydra/oauth2/token'
      - 'API_RESOURCE_SERVER=http://debtors-server:8080'
      - 'HYDRA_ADMIN_URL=http://debtors-login:4445'
      - 'MAIL_SERVER=mail'
      - 'MAIL_PORT=25'
    restart: on-failure


  debtors-swagger-ui:
    image: epandurski/swpt_debtors_swagger_ui:0.2.1
    environment:
      - 'API_ROOT=https://$PUBLIC_HOST/'
      - 'BASE_URL=/debtors-swagger-ui'
      - 'OAUTH2_AUTHORIZATION_URL=https://$PUBLIC_HOST/debtors-hydra/oauth2/auth'
      - 'OAUTH2_TOKEN_URL=https://$PUBLIC_HOST/debtors-hydra/oauth2/token'
      - 'OAUTH2_REFRESH_URL=https://$PUBLIC_HOST/debtors-hydra/oauth2/token'
      - 'OAUTH2_REDIRECT_URL=https://$PUBLIC_HOST/debtors-swagger-ui/oauth2-redirect.html'
    restart: on-failure


  # This is the HTTP gateway for all the containers.
  nginx:
    image: nginx:1.19.4
    volumes:
      - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf'
      - './docker/nginx/templates:/etc/nginx/templates'
      - './docker/nginx/ssl/cert.pem:/etc/nginx/ssl/cert.pem'
      - './docker/nginx/ssl/key.pem:/etc/nginx/ssl/key.pem'
    ports:
      - $PUBLIC_PORT:$PUBLIC_PORT
    environment:
      - 'PORT=$PUBLIC_PORT'
      - 'CREDITORS_HYDRA_URL=http://creditors-login:4444'
      - 'CREDITORS_LOGIN_URL=http://creditors-login:8080'
      - 'CREDITORS_SERVER_URL=http://creditors-server:8080'
      - 'CREDITORS_SWAGGER_UI_URL=http://creditors-swagger-ui:8080'
      - 'DEBTORS_HYDRA_URL=http://debtors-login:4444'
      - 'DEBTORS_LOGIN_URL=http://debtors-login:8080'
      - 'DEBTORS_SERVER_URL=http://debtors-server:8080'
      - 'DEBTORS_SWAGGER_UI_URL=http://debtors-swagger-ui:8080'
      - 'NGINX_ENTRYPOINT_QUIET_LOGS=1'
    restart: on-failure


  # The purpose of this container is to serve as HTTP cache for the
  # `account-server` container. In complex deployments, it is possible
  # to run several `account-server` instances, each instance being
  # responsible for a different range of debtors, and each instance
  # making HTTP requests to other `account-server` instances
  # (including itself). A properly configured HTTP cache ensures that
  # the system scales well. (See the `APP_FETCH_API_URL` configuration
  # variable.)
  accounts-cache:
    image: nginx:1.19.4
    volumes:
      - 'nginx-cache-volume:/var/lib/nginx/data'
      - './docker/accounts-cache/nginx.conf:/etc/nginx/nginx.conf'
      - './docker/accounts-cache/templates:/etc/nginx/templates'
    environment:
      - 'PORT=80'
      - 'ACCOUNTS_SERVER_URL=http://accounts-server:8080'
      - 'CACHE_KEYS_ZONE=10m'
      - 'CACHE_MAX_SIZE=1g'
      - 'NGINX_ENTRYPOINT_QUIET_LOGS=1'
    restart: on-failure


  # This is a dummy mail server which is useful only for testing. It
  # is necessary to have mail server, because the signup/login
  # procedure sends e-mails to the users.
  mail:
    image: mailhog/mailhog:v1.0.1
    environment:
      - 'MH_SMTP_BIND_ADDR=0.0.0.0:25'
    ports:
      - 8025:8025
    restart: on-failure


  # This Redis instance is used by the services that perform the
  # OAuth2 login and consent (`creditors-login` and `debtors-login`).
  redis:
    image: redis:6.0.9
    volumes:
      - 'redis-data-volume:/data'
    restart: on-failure


volumes:
  pg-data-volume:
  rabbitmq-data-volume:
  nginx-cache-volume:
  redis-data-volume:
