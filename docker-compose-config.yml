version: '3.6'

services:

  pg:
    image: postgres:$POSTGRES_VERSION
    environment:
      - 'POSTGRES_DB=$POSTGRES_DB'
      - 'POSTGRES_USER=$POSTGRES_USER'
      - 'POSTGRES_PASSWORD=$POSTGRES_PASSWORD'
    volumes:
      - 'pg-data-volume:/var/lib/postgresql/data'
      - './docker/pg/create-users.sql:/docker-entrypoint-initdb.d/create-users.sql'
    command: -c log_min_messages=FATAL


  rabbitmq:
    image: rabbitmq:$RABBITMQ_VERSION
    hostname: rabbitmq
    volumes:
      - './docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf'
      - 'rabbitmq-data-volume:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq'
    environment:
      - 'RABBITMQ_LOGS=-'
    ports:
      - $RABBITMQ_MANAGEMENT_LOCAL_PORT:15672


  accounts-server-config:
    image: epandurski/swpt_accounts:$SWPT_ACCOUNTS_VERSION
    env_file: docker/accounts-server.env
    environment:
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_accounts:swpt_accounts@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
      - 'CHORES_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
    command: configure


  creditors-server-config:
    image: epandurski/swpt_creditors:$SWPT_CREDITORS_VERSION
    env_file: docker/creditors-server.env
    environment:
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_creditors:swpt_creditors@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
    command: configure


  creditors-login-config:
    image: epandurski/swpt_login:$SWPT_LOGIN_VERSION
    env_file: docker/creditors-login.env
    environment:
      - 'HYDRA_DSN=postgres://hydra_creditors:hydra_creditors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_creditors_login:swpt_creditors_login@pg/${POSTGRES_DB}'
    command: configure


  creditors-hydra:
    image: epandurski/swpt_login:$SWPT_LOGIN_VERSION
    env_file: docker/creditors-login.env
    environment:
      - 'SERVE_ADMIN_PORT=4445'
      - 'HYDRA_DSN=postgres://hydra_creditors:hydra_creditors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
    command: hydraserver
    restart: on-failure


  creditors-hydra-config:
    image: epandurski/swpt_login:$SWPT_LOGIN_VERSION
    environment:
      - 'HYDRA_ADMIN_URL=http://creditors-hydra:4445'
    volumes:
      - './docker/creditors-hydra:/etc/hydra-config'
    command:
      hydra clients import
      /etc/hydra-config/creditors-supervisor.json
      /etc/hydra-config/swagger-ui.json
      --fake-tls-termination
      --fail-after 5m
    restart: on-failure


  debtors-server-config:
    image: epandurski/swpt_debtors:$SWPT_DEBTORS_VERSION
    env_file: docker/debtors-server.env
    environment:
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors:swpt_debtors@pg:5432/${POSTGRES_DB}'
      - 'PROTOCOL_BROKER_URL=amqp://guest:guest@rabbitmq:5672'
    command: configure
      
      
  debtors-login-config:
    image: epandurski/swpt_login:$SWPT_LOGIN_VERSION
    env_file: docker/debtors-login.env
    environment:
      - 'HYDRA_DSN=postgres://hydra_debtors:hydra_debtors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
      - 'SQLALCHEMY_DATABASE_URI=postgresql://swpt_debtors_login:swpt_debtors_login@pg/${POSTGRES_DB}'
    command: configure


  debtors-hydra:
    image: epandurski/swpt_login:$SWPT_LOGIN_VERSION
    env_file: docker/debtors-login.env
    environment:
      - 'SERVE_ADMIN_PORT=4445'
      - 'HYDRA_DSN=postgres://hydra_debtors:hydra_debtors@pg/${POSTGRES_DB}?sslmode=disable&max_conns=2&max_idle_conns=1&max_conn_lifetime=30s'
    command: hydraserver
    restart: on-failure


  debtors-hydra-config:
    image: epandurski/swpt_login:$SWPT_LOGIN_VERSION
    environment:
      - 'HYDRA_ADMIN_URL=http://debtors-hydra:4445'
    volumes:
      - './docker/debtors-hydra:/etc/hydra-config'
    command:
      hydra clients import
      /etc/hydra-config/debtors-supervisor.json
      /etc/hydra-config/swagger-ui.json
      --fake-tls-termination
      --fail-after 5m
    restart: on-failure


volumes:
  pg-data-volume:
  rabbitmq-data-volume:
